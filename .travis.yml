language: minimal

matrix:
  include:
  - os: linux
    env: PYTHON_VERSION="3.5" DEPS="numpy=1.12 gdal=2.0 dask-core=0.18 toolz=0.9 pandas=0.19 shapely=1.5 geopandas=0.4.0 pytz scipy=0.19"
  - os: linux
    env: PYTHON_VERSION="3.6" DEPS="numpy=1.14 gdal=2.2 dask-core=0.20 toolz=0.10 pandas=0.23 shapely=1.6 geopandas=0.4 pytz scipy=1.1"
  - os: linux
    env: PYTHON_VERSION="3.7" DEPS="numpy gdal dask-core toolz geopandas pytz scipy"
  - os: osx
    env: PYTHON_VERSION="3.7" DEPS="numpy gdal dask-core toolz geopandas pytz scipy"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi;

install:
  # install miniconda
  # -b means "batch mode": automatically agree with license
  # -p means "prefix": determine installation prefix
  - bash miniconda.sh -b -p $HOME/miniconda
  # setup the paths and reset hash
  - export PATH="$HOME/miniconda:$HOME/miniconda/bin:$PATH"
  - source $HOME/miniconda/etc/profile.d/conda.sh
  - hash -r
  # update and configure miniconda
  - conda update --yes conda
  - conda config --set changeps1 no --set restore_free_channel true
  - conda config --add channels conda-forge
  # create and activate the test environment
  - conda create -n testenv --yes python=$PYTHON_VERSION $DEPS pytest
  - conda activate testenv
  - pip install . --no-deps
  # print stuff for debugging
  - conda --version ; python --version ; pip --version;

script:
  - pytest
